<div class="fixed bottom-0 left-0 w-full bg-white dark:bg-deep-moss-black border-t border-gray-200 dark:border-forest-shadow md:hidden z-50">
  <div class="grid grid-cols-5">
    <a href="/" class="flex flex-col items-center justify-center py-3 hover:bg-gray-100 dark:hover:bg-forest-shadow transition-colors duration-200" aria-label="Home">
      <svg class="w-6 h-6 text-deep-moss-black dark:text-mist-gray" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
      </svg>
      <span class="text-xs text-deep-moss-black dark:text-mist-gray mt-1">Home</span>
    </a>
    
    <a href="/collections/all" class="flex flex-col items-center justify-center py-3 hover:bg-gray-100 dark:hover:bg-forest-shadow transition-colors duration-200" aria-label="Shop">
      <svg class="w-6 h-6 text-deep-moss-black dark:text-mist-gray" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
      </svg>
      <span class="text-xs text-deep-moss-black dark:text-mist-gray mt-1">Shop</span>
    </a>
    
    <a href="/search" class="flex flex-col items-center justify-center py-3 hover:bg-gray-100 dark:hover:bg-forest-shadow transition-colors duration-200" aria-label="Search">
      <div class="relative">
        <svg class="w-6 h-6 text-deep-moss-black dark:text-mist-gray" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M21 21l-6-6m2-5a7 7 0 11-14 0 7 7 0 0114 0z"></path>
        </svg>
      </div>
      <span class="text-xs text-deep-moss-black dark:text-mist-gray mt-1">Search</span>
    </a>
    
    <a href="/pages/wishlist" class="flex flex-col items-center justify-center py-3 hover:bg-gray-100 dark:hover:bg-forest-shadow transition-colors duration-200" aria-label="Wishlist">
      <div class="relative">
        <svg class="w-6 h-6 text-deep-moss-black dark:text-mist-gray" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
        </svg>
        <span id="wishlist-count" class="absolute -top-1 -right-1 bg-olive-verde text-white text-xs rounded-full h-4 w-4 flex items-center justify-center wishlist-count hidden">0</span>
      </div>
      <span class="text-xs text-deep-moss-black dark:text-mist-gray mt-1">Wishlist</span>
    </a>
    
    <a href="/account" class="flex flex-col items-center justify-center py-3 hover:bg-gray-100 dark:hover:bg-forest-shadow transition-colors duration-200" aria-label="Account">
      <svg class="w-6 h-6 text-deep-moss-black dark:text-mist-gray" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
      </svg>
      <span class="text-xs text-deep-moss-black dark:text-mist-gray mt-1">Account</span>
    </a>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Update wishlist count if functionality exists
    updateWishlistCount();
    
    // Add padding to the bottom of the page to account for the fixed bottom nav
    const bottomNav = document.querySelector('.fixed.bottom-0');
    if (bottomNav) {
      const bottomNavHeight = bottomNav.offsetHeight;
      document.body.style.paddingBottom = bottomNavHeight + 'px';
    }
  });
  
  /**
   * Update wishlist count
   */
  function updateWishlistCount() {
    // First try localStorage (primary storage method)
    let wishlistItems = [];
    try {
      wishlistItems = JSON.parse(localStorage.getItem('wishlist') || '[]');
    } catch (e) {
      console.error('Error parsing wishlist from localStorage:', e);
      
      // Fallback to cookies if localStorage fails
      try {
        const cookieValue = getCookie('wishlist');
        if (cookieValue) {
          wishlistItems = JSON.parse(cookieValue);
        }
      } catch (e) {
        console.error('Error parsing wishlist from cookies:', e);
      }
    }
    
    const wishlistCountElements = document.querySelectorAll('.wishlist-count');
    
    wishlistCountElements.forEach(element => {
      element.textContent = wishlistItems.length;
      if (wishlistItems.length > 0) {
        element.classList.remove('hidden');
      } else {
        element.classList.add('hidden');
      }
    });
  }
  
  /**
   * Get cookie value by name
   */
  function getCookie(name) {
    let nameEQ = name + "=";
    let ca = document.cookie.split(';');
    for (let i = 0; i < ca.length; i++) {
      let c = ca[i];
      while (c.charAt(0) == ' ') c = c.substring(1, c.length);
      if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
    }
    return null;
  }
  
  // Listen for storage events to update wishlist count when it changes
  window.addEventListener('storage', function(e) {
    if (e.key === 'wishlist') {
      updateWishlistCount();
    }
  });
</script>
