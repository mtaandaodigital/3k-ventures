{% comment %}
  Special Product Section
  Inspired by the Zenis grocery template design
{% endcomment %}

<div class="py-16 bg-white dark:bg-gray-900">
  <div class="container mx-auto px-4">
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
      <!-- Left Side - Product Image -->
      <div class="relative overflow-hidden rounded-lg">
        {% if section.settings.product != blank %}
          {% assign product = section.settings.product %}
          <div class="relative h-full">
            <img 
              src="{{ product.featured_image | img_url: '1000x' }}" 
              alt="{{ product.title }}"
              class="w-full h-full object-cover rounded-lg"
            >
            
            <!-- Discount Badge -->
            {% if product.compare_at_price > product.price %}
              {% assign discount_amount = product.compare_at_price | minus: product.price %}
              {% assign discount_percentage = discount_amount | times: 100 | divided_by: product.compare_at_price %}
              <div class="absolute top-4 left-4 bg-primary text-white text-sm font-bold px-3 py-1 rounded-full">
                {{ discount_percentage }}% OFF
              </div>
            {% endif %}
            
            <!-- Timer Countdown -->
            {% if section.settings.show_countdown %}
              <div class="absolute bottom-4 left-4 right-4 bg-white/90 dark:bg-gray-800/90 rounded-lg p-4">
                <p class="text-sm text-gray-600 dark:text-gray-300 mb-2">Offer ends in:</p>
                <div class="grid grid-cols-4 gap-2 countdown-timer" data-end-date="{{ section.settings.end_date }}">
                  <div class="bg-primary/10 rounded-lg p-2 text-center">
                    <span class="days text-xl font-bold text-primary block">00</span>
                    <span class="text-xs text-gray-600 dark:text-gray-400">Days</span>
                  </div>
                  <div class="bg-primary/10 rounded-lg p-2 text-center">
                    <span class="hours text-xl font-bold text-primary block">00</span>
                    <span class="text-xs text-gray-600 dark:text-gray-400">Hours</span>
                  </div>
                  <div class="bg-primary/10 rounded-lg p-2 text-center">
                    <span class="minutes text-xl font-bold text-primary block">00</span>
                    <span class="text-xs text-gray-600 dark:text-gray-400">Mins</span>
                  </div>
                  <div class="bg-primary/10 rounded-lg p-2 text-center">
                    <span class="seconds text-xl font-bold text-primary block">00</span>
                    <span class="text-xs text-gray-600 dark:text-gray-400">Secs</span>
                  </div>
                </div>
              </div>
            {% endif %}
          </div>
        {% else %}
          <div class="bg-gray-200 dark:bg-gray-700 h-full min-h-[400px] flex items-center justify-center rounded-lg">
            <svg class="w-16 h-16 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
            </svg>
          </div>
        {% endif %}
      </div>
      
      <!-- Right Side - Product Details -->
      <div class="flex flex-col justify-center">
        {% if section.settings.label != blank %}
          <span class="inline-block bg-primary/10 text-primary text-sm font-medium px-3 py-1 rounded-full mb-4">
            {{ section.settings.label }}
          </span>
        {% endif %}
        
        <h2 class="text-3xl md:text-4xl font-bold text-gray-900 dark:text-white mb-4">
          {{ section.settings.heading | default: product.title }}
        </h2>
        
        <div class="mb-6">
          {% if product.description != blank %}
            <div class="text-gray-600 dark:text-gray-300 mb-4">
              {{ product.description | strip_html | truncatewords: 30 }}
            </div>
          {% else %}
            <div class="text-gray-600 dark:text-gray-300 mb-4">
              {{ section.settings.description }}
            </div>
          {% endif %}
        </div>
        
        {% if product != blank %}
          <div class="flex items-center mb-6">
            <span class="text-2xl font-bold text-primary mr-3">{{ product.price | money }}</span>
            {% if product.compare_at_price > product.price %}
              <span class="text-lg text-gray-500 line-through">{{ product.compare_at_price | money }}</span>
            {% endif %}
          </div>
          
          <!-- Features List -->
          {% if section.settings.show_features %}
            <div class="mb-8">
              <h3 class="text-lg font-semibold text-gray-900 dark:text-white mb-4">Key Features:</h3>
              <ul class="space-y-3">
                {% for block in section.blocks %}
                  {% if block.type == 'feature' %}
                    <li class="flex items-start" {{ block.shopify_attributes }}>
                      <div class="flex-shrink-0 w-5 h-5 bg-primary/20 rounded-full flex items-center justify-center mr-3 mt-0.5">
                        <svg class="w-3 h-3 text-primary" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M5 13l4 4L19 7"></path>
                        </svg>
                      </div>
                      <span class="text-gray-700 dark:text-gray-300">{{ block.settings.text }}</span>
                    </li>
                  {% endif %}
                {% endfor %}
              </ul>
            </div>
          {% endif %}
          
          <!-- Add to Cart Button -->
          <form method="post" action="/cart/add" class="flex flex-col sm:flex-row gap-4">
            <input type="hidden" name="id" value="{{ product.selected_or_first_available_variant.id }}">
            
            <div class="flex border border-gray-300 dark:border-gray-600 rounded-lg overflow-hidden w-32">
              <button type="button" class="quantity-decrease px-3 py-2 bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M20 12H4"></path>
                </svg>
              </button>
              <input type="number" name="quantity" value="1" min="1" class="w-full text-center border-none focus:ring-0 text-gray-700 dark:text-gray-300 bg-white dark:bg-gray-800">
              <button type="button" class="quantity-increase px-3 py-2 bg-gray-100 dark:bg-gray-700 text-gray-600 dark:text-gray-300 hover:bg-gray-200 dark:hover:bg-gray-600 transition-colors duration-200">
                <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                </svg>
              </button>
            </div>
            
            <button type="submit" class="flex-grow bg-primary hover:bg-primary-dark text-white font-bold py-3 px-6 rounded-lg transition-colors duration-200 flex items-center justify-center">
              <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
              </svg>
              {{ section.settings.button_text | default: 'Add to Cart' }}
            </button>
          </form>
        {% else %}
          <!-- Placeholder for when no product is selected -->
          <div class="flex items-center mb-6">
            <span class="text-2xl font-bold text-primary mr-3">$99.99</span>
            <span class="text-lg text-gray-500 line-through">$129.99</span>
          </div>
          
          <button class="bg-primary hover:bg-primary-dark text-white font-bold py-3 px-6 rounded-lg transition-colors duration-200 flex items-center justify-center opacity-50 cursor-not-allowed">
            <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
            </svg>
            {{ section.settings.button_text | default: 'Add to Cart' }}
          </button>
        {% endif %}
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Quantity buttons functionality
    const decreaseButtons = document.querySelectorAll('.quantity-decrease');
    const increaseButtons = document.querySelectorAll('.quantity-increase');
    
    decreaseButtons.forEach(button => {
      button.addEventListener('click', function() {
        const input = this.nextElementSibling;
        const value = parseInt(input.value);
        if (value > 1) {
          input.value = value - 1;
        }
      });
    });
    
    increaseButtons.forEach(button => {
      button.addEventListener('click', function() {
        const input = this.previousElementSibling;
        const value = parseInt(input.value);
        input.value = value + 1;
      });
    });
    
    // Countdown timer functionality
    const countdownElements = document.querySelectorAll('.countdown-timer');
    
    countdownElements.forEach(element => {
      const endDateStr = element.getAttribute('data-end-date');
      // Default to 30 days from now if no end date is set
      const endDate = endDateStr ? new Date(endDateStr).getTime() : new Date(new Date().getTime() + 30 * 24 * 60 * 60 * 1000).getTime();
      
      const daysElement = element.querySelector('.days');
      const hoursElement = element.querySelector('.hours');
      const minutesElement = element.querySelector('.minutes');
      const secondsElement = element.querySelector('.seconds');
      
      // Update the countdown every second
      const countdownInterval = setInterval(function() {
        const now = new Date().getTime();
        const distance = endDate - now;
        
        // If the countdown is over, clear the interval
        if (distance < 0) {
          clearInterval(countdownInterval);
          daysElement.textContent = '00';
          hoursElement.textContent = '00';
          minutesElement.textContent = '00';
          secondsElement.textContent = '00';
          return;
        }
        
        // Calculate days, hours, minutes, and seconds
        const days = Math.floor(distance / (1000 * 60 * 60 * 24));
        const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((distance % (1000 * 60)) / 1000);
        
        // Display the result
        daysElement.textContent = days < 10 ? '0' + days : days;
        hoursElement.textContent = hours < 10 ? '0' + hours : hours;
        minutesElement.textContent = minutes < 10 ? '0' + minutes : minutes;
        secondsElement.textContent = seconds < 10 ? '0' + seconds : seconds;
      }, 1000);
    });
  });
</script>

{% schema %}
{
  "name": "Special Product",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "product",
      "id": "product",
      "label": "Product"
    },
    {
      "type": "text",
      "id": "label",
      "label": "Label",
      "default": "Special Offer"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Custom Heading (Leave blank to use product title)"
    },
    {
      "type": "richtext",
      "id": "description",
      "label": "Custom Description (Leave blank to use product description)"
    },
    {
      "type": "text",
      "id": "button_text",
      "label": "Button Text",
      "default": "Add to Cart"
    },
    {
      "type": "header",
      "content": "Countdown Timer"
    },
    {
      "type": "checkbox",
      "id": "show_countdown",
      "label": "Show Countdown Timer",
      "default": true
    },
    {
      "type": "date",
      "id": "end_date",
      "label": "End Date (Set to when the offer ends)"
    },
    {
      "type": "header",
      "content": "Features"
    },
    {
      "type": "checkbox",
      "id": "show_features",
      "label": "Show Features",
      "default": true
    }
  ],
  "blocks": [
    {
      "type": "feature",
      "name": "Feature",
      "settings": [
        {
          "type": "text",
          "id": "text",
          "label": "Feature Text",
          "default": "100% Organic Product"
        }
      ]
    }
  ],
  "presets": [
    {
      "name": "Special Product",
      "category": "Product",
      "blocks": [
        {
          "type": "feature",
          "settings": {
            "text": "100% Organic Product"
          }
        },
        {
          "type": "feature",
          "settings": {
            "text": "Free Shipping & Returns"
          }
        },
        {
          "type": "feature",
          "settings": {
            "text": "Fresh & Healthy Guaranteed"
          }
        },
        {
          "type": "feature",
          "settings": {
            "text": "Best Price Guarantee"
          }
        }
      ]
    }
  ]
}
{% endschema %}