{% comment %}
  Collection Header Section
  Inspired by the Zenis template design
{% endcomment %}

<div class="bg-white dark:bg-gray-900 py-8 md:py-12">
  <div class="container mx-auto px-4">
    <!-- Collection Banner -->
    {% if collection.image %}
      <div class="relative rounded-lg overflow-hidden mb-8">
        <div class="h-40 md:h-60 lg:h-80 overflow-hidden">
          <img 
            src="{{ collection.image | img_url: 'master' }}" 
            alt="{{ collection.title | escape }}" 
            class="w-full h-full object-cover"
          >
          <div class="absolute inset-0 bg-black/30"></div>
        </div>
        <div class="absolute inset-0 flex items-center justify-center">
          <div class="text-center">
            <h1 class="text-3xl md:text-4xl lg:text-5xl font-bold text-white mb-4 drop-shadow-lg">{{ collection.title }}</h1>
            {% if collection.description != blank %}
              <div class="max-w-2xl mx-auto text-white text-base md:text-lg drop-shadow-md">
                {{ collection.description }}
              </div>
            {% endif %}
          </div>
        </div>
      </div>
    {% else %}
      <div class="text-center mb-8">
        <h1 class="text-3xl md:text-4xl lg:text-5xl font-bold text-gray-900 dark:text-white mb-4">{{ collection.title }}</h1>
        {% if collection.description != blank %}
          <div class="max-w-2xl mx-auto text-gray-600 dark:text-gray-300 text-base md:text-lg">
            {{ collection.description }}
          </div>
        {% endif %}
      </div>
    {% endif %}
    
    <!-- Collection Stats -->
    <div class="flex flex-col md:flex-row md:items-center justify-between mb-6">
      <div class="text-gray-600 dark:text-gray-400 mb-4 md:mb-0">
        Showing {{ collection.products_count }} products
      </div>
      
      <!-- Sort By -->
      <div class="flex items-center">
        <label for="sort-by" class="text-gray-600 dark:text-gray-400 mr-2">Sort by:</label>
        <div class="relative">
          <select id="sort-by" class="appearance-none bg-white dark:bg-gray-800 border border-gray-300 dark:border-gray-700 rounded-lg py-2 px-4 pr-8 text-gray-700 dark:text-gray-300 leading-tight focus:outline-none focus:ring-2 focus:ring-primary focus:border-primary">
            <option value="manual">Featured</option>
            <option value="best-selling">Best Selling</option>
            <option value="title-ascending">Alphabetically, A-Z</option>
            <option value="title-descending">Alphabetically, Z-A</option>
            <option value="price-ascending">Price, low to high</option>
            <option value="price-descending">Price, high to low</option>
            <option value="created-descending">Date, new to old</option>
            <option value="created-ascending">Date, old to new</option>
          </select>
          <div class="pointer-events-none absolute inset-y-0 right-0 flex items-center px-2 text-gray-700 dark:text-gray-300">
            <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 9l-7 7-7-7"></path>
            </svg>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Sort by functionality
    const sortBySelect = document.getElementById('sort-by');
    
    if (sortBySelect) {
      // Set the initial value based on the current URL
      const urlParams = new URLSearchParams(window.location.search);
      const sortParam = urlParams.get('sort_by');
      
      if (sortParam) {
        sortBySelect.value = sortParam;
      }
      
      // Add change event listener
      sortBySelect.addEventListener('change', function() {
        const selectedValue = this.value;
        const url = new URL(window.location.href);
        
        if (selectedValue) {
          url.searchParams.set('sort_by', selectedValue);
        } else {
          url.searchParams.delete('sort_by');
        }
        
        window.location.href = url.toString();
      });
    }
  });
</script>

{% schema %}
{
  "name": "Collection Header",
  "tag": "section",
  "class": "section",
  "settings": [],
  "presets": [
    {
      "name": "Collection Header",
      "category": "Collection"
    }
  ]
}
{% endschema %}