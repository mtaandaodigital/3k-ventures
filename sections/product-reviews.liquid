<div class="product-reviews py-8">
  <div class="container mx-auto px-4">
    <h2 class="section-title">{{ section.settings.title }}</h2>
    
    <div class="max-w-4xl mx-auto">
      <!-- Reviews Summary -->
      <div class="reviews-summary bg-white dark:bg-deep-moss-black rounded-lg shadow-md p-6 mb-8">
        <div class="flex flex-col md:flex-row md:items-center">
          <div class="flex-1 mb-4 md:mb-0">
            <div class="flex items-center mb-2">
              <div class="flex">
                {% assign average_rating = 4.5 %}
                {% for i in (1..5) %}
                  {% if i <= average_rating %}
                    <svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                    </svg>
                  {% elsif i == average_rating | plus: 0.5 | floor | plus: 1 and average_rating | modulo: 1 != 0 %}
                    <svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                      <defs>
                        <linearGradient id="half-star-gradient" x1="0%" y1="0%" x2="100%" y2="0%">
                          <stop offset="50%" stop-color="currentColor" stop-opacity="1"></stop>
                          <stop offset="50%" stop-color="currentColor" stop-opacity="0.3"></stop>
                        </linearGradient>
                      </defs>
                      <path fill="url(#half-star-gradient)" d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                    </svg>
                  {% else %}
                    <svg class="w-5 h-5 text-yellow-400 opacity-30" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                      <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                    </svg>
                  {% endif %}
                {% endfor %}
              </div>
              <span class="ml-2 text-lg font-medium text-deep-moss-black dark:text-mist-gray">{{ average_rating }} out of 5</span>
            </div>
            <p class="text-gray-700 dark:text-gray-300">Based on {{ section.settings.review_count }} reviews</p>
          </div>
          
          <div class="flex-1">
            <div class="space-y-2">
              {% for i in (1..5) %}
                {% assign star_level = 6 | minus: i %}
                {% assign percentage = 85 | minus: i | times: 5 %}
                <div class="flex items-center">
                  <span class="text-sm text-gray-700 dark:text-gray-300 w-8">{{ star_level }}â˜…</span>
                  <div class="flex-1 h-2 mx-2 bg-gray-200 dark:bg-forest-shadow rounded-full">
                    <div class="h-2 bg-olive-verde rounded-full" style="width: {{ percentage }}%"></div>
                  </div>
                  <span class="text-sm text-gray-700 dark:text-gray-300 w-8">{{ percentage }}%</span>
                </div>
              {% endfor %}
            </div>
          </div>
        </div>
        
        <div class="mt-6 pt-6 border-t border-mist-gray dark:border-forest-shadow">
          <button id="write-review-button" class="btn-primary">
            {{ section.settings.write_review_button_text }}
          </button>
        </div>
      </div>
      
      <!-- Review Filters -->
      <div class="review-filters mb-6 flex flex-wrap gap-2">
        <button class="px-3 py-1 rounded-full bg-olive-verde text-white text-sm">All Reviews</button>
        <button class="px-3 py-1 rounded-full bg-gray-200 dark:bg-forest-shadow text-deep-moss-black dark:text-mist-gray text-sm">5 Stars</button>
        <button class="px-3 py-1 rounded-full bg-gray-200 dark:bg-forest-shadow text-deep-moss-black dark:text-mist-gray text-sm">4 Stars</button>
        <button class="px-3 py-1 rounded-full bg-gray-200 dark:bg-forest-shadow text-deep-moss-black dark:text-mist-gray text-sm">3 Stars</button>
        <button class="px-3 py-1 rounded-full bg-gray-200 dark:bg-forest-shadow text-deep-moss-black dark:text-mist-gray text-sm">2 Stars</button>
        <button class="px-3 py-1 rounded-full bg-gray-200 dark:bg-forest-shadow text-deep-moss-black dark:text-mist-gray text-sm">1 Star</button>
        <button class="px-3 py-1 rounded-full bg-gray-200 dark:bg-forest-shadow text-deep-moss-black dark:text-mist-gray text-sm">With Photos</button>
        <button class="px-3 py-1 rounded-full bg-gray-200 dark:bg-forest-shadow text-deep-moss-black dark:text-mist-gray text-sm">Verified Purchases</button>
      </div>
      
      <!-- Reviews List -->
      <div class="reviews-list space-y-6">
        {% for i in (1..5) %}
          <div class="review bg-white dark:bg-deep-moss-black rounded-lg shadow-md p-6">
            <div class="flex justify-between mb-4">
              <div>
                <div class="flex items-center mb-1">
                  <div class="flex">
                    {% assign rating = 5 | minus: forloop.index0 | at_most: 5 %}
                    {% for j in (1..5) %}
                      {% if j <= rating %}
                        <svg class="w-5 h-5 text-yellow-400" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                        </svg>
                      {% else %}
                        <svg class="w-5 h-5 text-yellow-400 opacity-30" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                          <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                        </svg>
                      {% endif %}
                    {% endfor %}
                  </div>
                  <h3 class="ml-2 text-lg font-semibold text-deep-moss-black dark:text-mist-gray">{{ 'Great product!' | append: ' ' | append: forloop.index }}</h3>
                </div>
                <div class="flex items-center">
                  <span class="text-sm text-gray-700 dark:text-gray-300">By Customer {{ forloop.index }}</span>
                  {% if forloop.index <= 3 %}
                    <span class="ml-2 inline-flex items-center rounded-full bg-blue-50 px-2 py-0.5 text-xs font-medium text-blue-700 ring-1 ring-inset ring-blue-600/10">
                      Verified Purchase
                    </span>
                  {% endif %}
                </div>
              </div>
              <div class="text-sm text-gray-500 dark:text-gray-400">{{ 'now' | date: '%b %d, %Y' }}</div>
            </div>
            
            <p class="text-gray-700 dark:text-gray-300 mb-4">
              {% case forloop.index %}
                {% when 1 %}
                  This product exceeded my expectations! The quality is outstanding and it arrived earlier than expected. I would definitely recommend it to anyone looking for a reliable and stylish option.
                {% when 2 %}
                  I'm very happy with my purchase. The product is exactly as described and the customer service was excellent. Will definitely buy from this store again.
                {% when 3 %}
                  Good product for the price. Shipping was fast and the packaging was secure. There are a few minor issues but overall I'm satisfied with my purchase.
                {% when 4 %}
                  The product is okay but not as high quality as I expected. It works for now but I'm not sure how long it will last. Customer service was helpful when I had questions.
                {% when 5 %}
                  Unfortunately, this product didn't meet my expectations. The quality is lower than advertised and it arrived damaged. I've contacted customer service and am waiting for a response.
              {% endcase %}
            </p>
            
            {% if forloop.index == 2 %}
              <div class="review-images flex space-x-2 mb-4">
                <img src="https://via.placeholder.com/100" alt="Review image" class="w-24 h-24 object-cover rounded-md">
                <img src="https://via.placeholder.com/100" alt="Review image" class="w-24 h-24 object-cover rounded-md">
              </div>
            {% endif %}
            
            <div class="flex items-center text-sm">
              <button class="flex items-center text-gray-500 dark:text-gray-400 hover:text-olive-verde dark:hover:text-olive-verde transition-colors duration-200">
                <svg class="w-4 h-4 mr-1" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 10h4.764a2 2 0 011.789 2.894l-3.5 7A2 2 0 0115.263 21h-4.017c-.163 0-.326-.02-.485-.06L7 20m7-10V5a2 2 0 00-2-2h-.095c-.5 0-.905.405-.905.905 0 .714-.211 1.412-.608 2.006L7 11v9m7-10h-2M7 20H5a2 2 0 01-2-2v-6a2 2 0 012-2h2.5"></path>
                </svg>
                Helpful ({{ forloop.index | times: 3 }})
              </button>
              <span class="mx-2 text-gray-500 dark:text-gray-400">â€¢</span>
              <button class="text-gray-500 dark:text-gray-400 hover:text-olive-verde dark:hover:text-olive-verde transition-colors duration-200">
                Report
              </button>
            </div>
            
            {% if forloop.index == 1 %}
              <div class="mt-4 pt-4 border-t border-mist-gray dark:border-forest-shadow">
                <div class="flex items-start">
                  <div class="flex-shrink-0">
                    <div class="w-8 h-8 rounded-full bg-olive-verde flex items-center justify-center text-white font-semibold">S</div>
                  </div>
                  <div class="ml-3">
                    <div class="text-sm font-medium text-olive-verde">Store Response</div>
                    <div class="mt-1 text-sm text-gray-700 dark:text-gray-300">
                      Thank you for your wonderful review! We're thrilled that you're happy with your purchase. Feel free to reach out if you have any questions or need assistance in the future.
                    </div>
                    <div class="mt-2 text-xs text-gray-500 dark:text-gray-400">{{ 'now' | date: '%b %d, %Y' }}</div>
                  </div>
                </div>
              </div>
            {% endif %}
          </div>
        {% endfor %}
      </div>
      
      <!-- Pagination -->
      <div class="pagination mt-8 flex justify-center">
        <a href="#" class="inline-flex items-center px-4 py-2 text-sm font-medium text-deep-moss-black dark:text-mist-gray bg-white dark:bg-deep-moss-black border border-mist-gray dark:border-forest-shadow rounded-md hover:bg-olive-verde hover:text-white transition-colors duration-300">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 19l-7-7 7-7"></path>
          </svg>
          Previous
        </a>
        <span class="mx-2 inline-flex items-center px-4 py-2 text-sm font-medium bg-olive-verde text-white rounded-md">
          1
        </span>
        <a href="#" class="mx-2 inline-flex items-center px-4 py-2 text-sm font-medium text-deep-moss-black dark:text-mist-gray bg-white dark:bg-deep-moss-black border border-mist-gray dark:border-forest-shadow rounded-md hover:bg-olive-verde hover:text-white transition-colors duration-300">
          2
        </a>
        <a href="#" class="mx-2 inline-flex items-center px-4 py-2 text-sm font-medium text-deep-moss-black dark:text-mist-gray bg-white dark:bg-deep-moss-black border border-mist-gray dark:border-forest-shadow rounded-md hover:bg-olive-verde hover:text-white transition-colors duration-300">
          3
        </a>
        <a href="#" class="inline-flex items-center px-4 py-2 text-sm font-medium text-deep-moss-black dark:text-mist-gray bg-white dark:bg-deep-moss-black border border-mist-gray dark:border-forest-shadow rounded-md hover:bg-olive-verde hover:text-white transition-colors duration-300">
          Next
          <svg class="w-5 h-5 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M9 5l7 7-7 7"></path>
          </svg>
        </a>
      </div>
    </div>
  </div>
</div>

<!-- Write Review Modal -->
<div id="write-review-modal" class="fixed inset-0 z-50 overflow-y-auto hidden" aria-labelledby="modal-title" role="dialog" aria-modal="true">
  <div class="flex items-end justify-center min-h-screen pt-4 px-4 pb-20 text-center sm:block sm:p-0">
    <!-- Background overlay -->
    <div id="write-review-backdrop" class="fixed inset-0 bg-deep-moss-black bg-opacity-75 transition-opacity" aria-hidden="true"></div>

    <!-- Modal positioning -->
    <span class="hidden sm:inline-block sm:align-middle sm:h-screen" aria-hidden="true">&#8203;</span>

    <!-- Modal content -->
    <div id="write-review-content" class="inline-block align-bottom bg-white dark:bg-deep-moss-black rounded-lg text-left overflow-hidden shadow-xl transform transition-all sm:my-8 sm:align-middle sm:max-w-lg sm:w-full">
      <div class="absolute top-0 right-0 pt-4 pr-4">
        <button id="write-review-close" type="button" class="bg-white dark:bg-deep-moss-black rounded-md text-gray-400 hover:text-gray-500 dark:hover:text-gray-300 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-olive-verde">
          <span class="sr-only">Close</span>
          <svg class="h-6 w-6" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
          </svg>
        </button>
      </div>
      
      <div class="p-6">
        <h2 class="text-xl md:text-2xl font-bold text-deep-moss-black dark:text-mist-gray mb-4">Write a Review</h2>
        
        <form id="review-form" class="space-y-4">
          <div>
            <label for="review-rating" class="block text-sm font-medium text-deep-moss-black dark:text-mist-gray mb-1">Rating</label>
            <div class="flex" id="review-rating">
              {% for i in (1..5) %}
                <button type="button" class="rating-star w-8 h-8 text-gray-300 hover:text-yellow-400 focus:outline-none" data-rating="{{ i }}">
                  <svg class="w-full h-full" fill="currentColor" viewBox="0 0 20 20" xmlns="http://www.w3.org/2000/svg">
                    <path d="M9.049 2.927c.3-.921 1.603-.921 1.902 0l1.07 3.292a1 1 0 00.95.69h3.462c.969 0 1.371 1.24.588 1.81l-2.8 2.034a1 1 0 00-.364 1.118l1.07 3.292c.3.921-.755 1.688-1.54 1.118l-2.8-2.034a1 1 0 00-1.175 0l-2.8 2.034c-.784.57-1.838-.197-1.539-1.118l1.07-3.292a1 1 0 00-.364-1.118L2.98 8.72c-.783-.57-.38-1.81.588-1.81h3.461a1 1 0 00.951-.69l1.07-3.292z"></path>
                  </svg>
                </button>
              {% endfor %}
              <input type="hidden" name="rating" id="rating-value" value="">
            </div>
          </div>
          
          <div>
            <label for="review-title" class="block text-sm font-medium text-deep-moss-black dark:text-mist-gray mb-1">Review Title</label>
            <input type="text" id="review-title" name="title" class="w-full px-3 py-2 rounded-lg border border-mist-gray dark:border-forest-shadow bg-white dark:bg-deep-moss-black/50 text-deep-moss-black dark:text-mist-gray focus:ring-2 focus:ring-olive-verde focus:border-olive-verde" placeholder="Summarize your experience">
          </div>
          
          <div>
            <label for="review-content" class="block text-sm font-medium text-deep-moss-black dark:text-mist-gray mb-1">Review</label>
            <textarea id="review-content" name="content" rows="4" class="w-full px-3 py-2 rounded-lg border border-mist-gray dark:border-forest-shadow bg-white dark:bg-deep-moss-black/50 text-deep-moss-black dark:text-mist-gray focus:ring-2 focus:ring-olive-verde focus:border-olive-verde" placeholder="What did you like or dislike? What did you use this product for?"></textarea>
          </div>
          
          <div>
            <label class="block text-sm font-medium text-deep-moss-black dark:text-mist-gray mb-1">Add Photos (optional)</label>
            <div class="flex items-center justify-center w-full">
              <label for="review-photos" class="flex flex-col items-center justify-center w-full h-32 border-2 border-dashed rounded-lg cursor-pointer bg-gray-50 dark:bg-deep-moss-black/30 border-mist-gray dark:border-forest-shadow hover:bg-gray-100 dark:hover:bg-deep-moss-black/50">
                <div class="flex flex-col items-center justify-center pt-5 pb-6">
                  <svg class="w-8 h-8 mb-4 text-gray-500 dark:text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M7 16a4 4 0 01-.88-7.903A5 5 0 1115.9 6L16 6a5 5 0 011 9.9M15 13l-3-3m0 0l-3 3m3-3v12"></path>
                  </svg>
                  <p class="mb-2 text-sm text-gray-500 dark:text-gray-400">Click to upload</p>
                  <p class="text-xs text-gray-500 dark:text-gray-400">PNG, JPG or JPEG (MAX. 5MB)</p>
                </div>
                <input id="review-photos" type="file" class="hidden" multiple accept="image/*">
              </label>
            </div>
            <div id="photo-preview" class="flex flex-wrap gap-2 mt-2"></div>
          </div>
          
          <div class="flex items-center">
            <input id="review-recommend" name="recommend" type="checkbox" class="h-4 w-4 text-olive-verde border-mist-gray rounded focus:ring-olive-verde">
            <label for="review-recommend" class="ml-2 block text-sm text-gray-700 dark:text-gray-300">
              I would recommend this product to a friend
            </label>
          </div>
          
          <div class="pt-4">
            <button type="submit" class="btn-primary w-full py-3">
              Submit Review
            </button>
          </div>
        </form>
      </div>
    </div>
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Write review modal
    const writeReviewButton = document.getElementById('write-review-button');
    const writeReviewModal = document.getElementById('write-review-modal');
    const writeReviewBackdrop = document.getElementById('write-review-backdrop');
    const writeReviewClose = document.getElementById('write-review-close');
    const reviewForm = document.getElementById('review-form');
    const ratingStars = document.querySelectorAll('.rating-star');
    const ratingValue = document.getElementById('rating-value');
    const photoInput = document.getElementById('review-photos');
    const photoPreview = document.getElementById('photo-preview');
    
    // Open write review modal
    if (writeReviewButton && writeReviewModal) {
      writeReviewButton.addEventListener('click', function() {
        writeReviewModal.classList.remove('hidden');
        document.body.style.overflow = 'hidden';
      });
    }
    
    // Close write review modal
    if (writeReviewBackdrop) {
      writeReviewBackdrop.addEventListener('click', closeReviewModal);
    }
    
    if (writeReviewClose) {
      writeReviewClose.addEventListener('click', closeReviewModal);
    }
    
    // Close on escape key
    document.addEventListener('keydown', function(event) {
      if (event.key === 'Escape' && !writeReviewModal.classList.contains('hidden')) {
        closeReviewModal();
      }
    });
    
    // Rating stars
    if (ratingStars.length > 0) {
      ratingStars.forEach(star => {
        star.addEventListener('click', function() {
          const rating = parseInt(this.getAttribute('data-rating'));
          ratingValue.value = rating;
          
          // Update star colors
          ratingStars.forEach((s, index) => {
            if (index < rating) {
              s.classList.remove('text-gray-300');
              s.classList.add('text-yellow-400');
            } else {
              s.classList.remove('text-yellow-400');
              s.classList.add('text-gray-300');
            }
          });
        });
      });
    }
    
    // Photo upload preview
    if (photoInput && photoPreview) {
      photoInput.addEventListener('change', function() {
        photoPreview.innerHTML = '';
        
        if (this.files) {
          Array.from(this.files).forEach(file => {
            if (file.type.match('image.*')) {
              const reader = new FileReader();
              
              reader.onload = function(e) {
                const img = document.createElement('div');
                img.className = 'relative w-16 h-16';
                img.innerHTML = `
                  <img src="${e.target.result}" class="w-full h-full object-cover rounded-md">
                  <button type="button" class="absolute -top-2 -right-2 bg-red-500 text-white rounded-full w-5 h-5 flex items-center justify-center" data-remove-photo>
                    <svg class="w-3 h-3" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                    </svg>
                  </button>
                `;
                photoPreview.appendChild(img);
                
                // Add remove button functionality
                img.querySelector('[data-remove-photo]').addEventListener('click', function() {
                  img.remove();
                });
              };
              
              reader.readAsDataURL(file);
            }
          });
        }
      });
    }
    
    // Review form submission
    if (reviewForm) {
      reviewForm.addEventListener('submit', function(event) {
        event.preventDefault();
        
        // Validate form
        const rating = ratingValue.value;
        const title = document.getElementById('review-title').value;
        const content = document.getElementById('review-content').value;
        
        if (!rating) {
          alert('Please select a rating');
          return;
        }
        
        if (!title) {
          alert('Please enter a review title');
          return;
        }
        
        if (!content) {
          alert('Please enter your review');
          return;
        }
        
        // Here you would normally submit the form data to your backend
        // For demo purposes, we'll just show a success message and close the modal
        alert('Thank you for your review! It will be published after moderation.');
        closeReviewModal();
        
        // Reset form
        reviewForm.reset();
        ratingStars.forEach(star => {
          star.classList.remove('text-yellow-400');
          star.classList.add('text-gray-300');
        });
        ratingValue.value = '';
        photoPreview.innerHTML = '';
      });
    }
    
    /**
     * Close the review modal
     */
    function closeReviewModal() {
      writeReviewModal.classList.add('hidden');
      document.body.style.overflow = '';
    }
  });
</script>

{% schema %}
{
  "name": "Product Reviews",
  "settings": [
    {
      "type": "text",
      "id": "title",
      "label": "Title",
      "default": "Customer Reviews"
    },
    {
      "type": "number",
      "id": "review_count",
      "label": "Review Count",
      "default": 24
    },
    {
      "type": "text",
      "id": "write_review_button_text",
      "label": "Write Review Button Text",
      "default": "Write a Review"
    }
  ],
  "presets": [
    {
      "name": "Product Reviews",
      "category": "Product"
    }
  ]
}
{% endschema %}
