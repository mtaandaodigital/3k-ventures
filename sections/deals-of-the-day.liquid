{% comment %}
  Deals of the Day Section
  Inspired by the grocery template design but adapted for clothing
{% endcomment %}

<div class="bg-white dark:bg-gray-900 py-12 md:py-16">
  <div class="container mx-auto px-4">
    <!-- Section Header -->
    <div class="flex flex-col md:flex-row md:items-center justify-between mb-8">
      <div>
        {% if section.settings.subheading != blank %}
          <h3 class="text-sm md:text-base font-medium text-primary mb-2">{{ section.settings.subheading }}</h3>
        {% endif %}
        
        <h2 class="text-2xl md:text-3xl font-bold text-gray-900 dark:text-white">{{ section.settings.heading }}</h2>
      </div>
      
      {% if section.settings.show_countdown and section.settings.end_date != blank %}
        <div class="mt-4 md:mt-0">
          <div class="countdown-timer flex items-center space-x-2" data-end-date="{{ section.settings.end_date }}">
            <div class="bg-primary/10 rounded-lg p-2 text-center min-w-[60px]">
              <span class="days font-bold text-xl text-primary block">00</span>
              <span class="text-xs text-gray-600 dark:text-gray-400">Days</span>
            </div>
            <div class="bg-primary/10 rounded-lg p-2 text-center min-w-[60px]">
              <span class="hours font-bold text-xl text-primary block">00</span>
              <span class="text-xs text-gray-600 dark:text-gray-400">Hours</span>
            </div>
            <div class="bg-primary/10 rounded-lg p-2 text-center min-w-[60px]">
              <span class="minutes font-bold text-xl text-primary block">00</span>
              <span class="text-xs text-gray-600 dark:text-gray-400">Mins</span>
            </div>
            <div class="bg-primary/10 rounded-lg p-2 text-center min-w-[60px]">
              <span class="seconds font-bold text-xl text-primary block">00</span>
              <span class="text-xs text-gray-600 dark:text-gray-400">Secs</span>
            </div>
          </div>
        </div>
      {% endif %}
    </div>
    
    <!-- Deals Grid -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
      {% if section.settings.collection != blank %}
        {% assign featured_collection = collections[section.settings.collection] %}
        {% for product in featured_collection.products limit: section.settings.products_to_show %}
          {% if product.compare_at_price > product.price %}
            <div class="deal-item">
              <div class="bg-white dark:bg-gray-800 rounded-lg shadow-card overflow-hidden border border-gray-100 dark:border-gray-700 h-full flex flex-col">
                <!-- Product Image -->
                <div class="relative">
                  <a href="{{ product.url }}">
                    {% if product.featured_image != blank %}
                      <img 
                        src="{{ product.featured_image | img_url: 'medium' }}" 
                        alt="{{ product.title | escape }}"
                        class="w-full h-64 object-cover"
                        loading="lazy"
                      >
                    {% else %}
                      <div class="w-full h-64 bg-gray-200 dark:bg-gray-700 flex items-center justify-center">
                        <svg class="w-16 h-16 text-gray-400" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                        </svg>
                      </div>
                    {% endif %}
                  </a>
                  
                  <!-- Discount Badge -->
                  {% if product.compare_at_price > product.price %}
                    {% assign discount_amount = product.compare_at_price | minus: product.price %}
                    {% assign discount_percentage = discount_amount | times: 100 | divided_by: product.compare_at_price %}
                    <div class="absolute top-3 left-3 bg-secondary text-white text-xs font-bold px-3 py-1 rounded-full">
                      -{{ discount_percentage }}%
                    </div>
                  {% endif %}
                  
                  <!-- Quick Actions -->
                  <div class="absolute top-3 right-3 flex flex-col space-y-2">
                    <button class="bg-white/90 backdrop-blur-sm text-gray-700 p-2 rounded-full shadow-lg hover:bg-primary hover:text-white transition-all duration-200 transform hover:scale-110" 
                            onclick="quickView('{{ product.handle }}');" 
                            aria-label="Quick view">
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M2.458 12C3.732 7.943 7.523 5 12 5c4.478 0 8.268 2.943 9.542 7-1.274 4.057-5.064 7-9.542 7-4.477 0-8.268-2.943-9.542-7z"></path>
                      </svg>
                    </button>
                    
                    <button class="bg-white/90 backdrop-blur-sm text-gray-700 p-2 rounded-full shadow-lg hover:bg-primary hover:text-white transition-all duration-200 transform hover:scale-110" 
                            onclick="toggleWishlist('{{ product.handle }}');" 
                            aria-label="Add to wishlist">
                      <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                        <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
                      </svg>
                    </button>
                  </div>
                </div>
                
                <!-- Product Info -->
                <div class="p-4 flex-grow flex flex-col">
                  <!-- Product Title -->
                  <h3 class="text-gray-900 dark:text-white font-medium text-lg mb-2 line-clamp-2">
                    <a href="{{ product.url }}" class="hover:text-primary transition-colors duration-200">{{ product.title }}</a>
                  </h3>
                  
                  <!-- Price -->
                  <div class="flex items-center mb-3">
                    <span class="text-primary font-bold text-xl">{{ product.price | money }}</span>
                    <span class="text-gray-400 line-through text-sm ml-2">{{ product.compare_at_price | money }}</span>
                  </div>
                  
                  <!-- Progress Bar -->
                  {% assign random_sold = 5 | plus: forloop.index | times: 3 %}
                  {% assign random_available = 20 | minus: random_sold %}
                  {% assign progress_percentage = random_sold | times: 100 | divided_by: 20 %}
                  
                  <div class="mt-auto">
                    <div class="flex items-center justify-between text-sm mb-1">
                      <span class="text-gray-600 dark:text-gray-400">Sold: {{ random_sold }}</span>
                      <span class="text-gray-600 dark:text-gray-400">Available: {{ random_available }}</span>
                    </div>
                    <div class="w-full bg-gray-200 dark:bg-gray-700 rounded-full h-2.5">
                      <div class="bg-primary h-2.5 rounded-full" style="width: {{ progress_percentage }}%"></div>
                    </div>
                  </div>
                  
                  <!-- Add to Cart Button -->
                  <button class="mt-4 w-full bg-primary hover:bg-primary-dark text-white py-2 px-4 rounded-lg transition-colors duration-200 flex items-center justify-center"
                          onclick="addToCart('{{ product.variants.first.id }}', 1);">
                    <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                      <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
                    </svg>
                    Add to Cart
                  </button>
                </div>
              </div>
            </div>
          {% endif %}
        {% endfor %}
      {% else %}
        {% for i in (1..4) %}
          <div class="deal-item">
            <div class="bg-white dark:bg-gray-800 rounded-lg shadow-card overflow-hidden border border-gray-100 dark:border-gray-700 h-full">
              <div class="bg-gray-200 dark:bg-gray-700 h-64 animate-pulse"></div>
              <div class="p-4">
                <div class="h-4 bg-gray-200 dark:bg-gray-700 rounded w-3/4 mb-2 animate-pulse"></div>
                <div class="h-4 bg-gray-200 dark:bg-gray-700 rounded w-1/2 mb-4 animate-pulse"></div>
                <div class="h-6 bg-gray-200 dark:bg-gray-700 rounded w-1/3 mb-4 animate-pulse"></div>
                <div class="h-2 bg-gray-200 dark:bg-gray-700 rounded w-full mb-2 animate-pulse"></div>
                <div class="h-10 bg-gray-200 dark:bg-gray-700 rounded w-full mt-4 animate-pulse"></div>
              </div>
            </div>
          </div>
        {% endfor %}
      {% endif %}
    </div>
    
    <!-- View All Button -->
    {% if section.settings.show_view_all and section.settings.collection != blank %}
      <div class="text-center mt-10">
        <a href="{{ collections[section.settings.collection].url }}" class="inline-flex items-center px-6 py-3 bg-primary text-white font-medium rounded-lg hover:bg-primary-dark transition-colors duration-200">
          {{ section.settings.view_all_text }}
          <svg class="w-4 h-4 ml-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M14 5l7 7m0 0l-7 7m7-7H3"></path>
          </svg>
        </a>
      </div>
    {% endif %}
  </div>
</div>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const countdownTimers = document.querySelectorAll('.countdown-timer');
    
    countdownTimers.forEach(timer => {
      const endDate = new Date(timer.getAttribute('data-end-date')).getTime();
      const daysElement = timer.querySelector('.days');
      const hoursElement = timer.querySelector('.hours');
      const minutesElement = timer.querySelector('.minutes');
      const secondsElement = timer.querySelector('.seconds');
      
      // Update the countdown every second
      const countdownInterval = setInterval(function() {
        const now = new Date().getTime();
        const distance = endDate - now;
        
        // Time calculations
        const days = Math.floor(distance / (1000 * 60 * 60 * 24));
        const hours = Math.floor((distance % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60));
        const minutes = Math.floor((distance % (1000 * 60 * 60)) / (1000 * 60));
        const seconds = Math.floor((distance % (1000 * 60)) / 1000);
        
        // Display the result
        daysElement.textContent = days < 10 ? '0' + days : days;
        hoursElement.textContent = hours < 10 ? '0' + hours : hours;
        minutesElement.textContent = minutes < 10 ? '0' + minutes : minutes;
        secondsElement.textContent = seconds < 10 ? '0' + seconds : seconds;
        
        // If the countdown is finished, clear the interval
        if (distance < 0) {
          clearInterval(countdownInterval);
          daysElement.textContent = '00';
          hoursElement.textContent = '00';
          minutesElement.textContent = '00';
          secondsElement.textContent = '00';
        }
      }, 1000);
    });
  });
</script>

{% schema %}
{
  "name": "Deals of the Day",
  "tag": "section",
  "class": "section",
  "settings": [
    {
      "type": "text",
      "id": "subheading",
      "label": "Subheading",
      "default": "Don't Miss"
    },
    {
      "type": "text",
      "id": "heading",
      "label": "Heading",
      "default": "Deals of the Day"
    },
    {
      "type": "collection",
      "id": "collection",
      "label": "Collection",
      "info": "Select a collection with discounted products"
    },
    {
      "type": "range",
      "id": "products_to_show",
      "min": 4,
      "max": 12,
      "step": 4,
      "default": 4,
      "label": "Products to show"
    },
    {
      "type": "checkbox",
      "id": "show_countdown",
      "label": "Show countdown timer",
      "default": true
    },
    {
      "type": "text",
      "id": "end_date",
      "label": "End date",
      "default": "2023-12-31T23:59:59",
      "info": "Format: YYYY-MM-DDTHH:MM:SS"
    },
    {
      "type": "checkbox",
      "id": "show_view_all",
      "label": "Show 'View All' button",
      "default": true
    },
    {
      "type": "text",
      "id": "view_all_text",
      "label": "View all text",
      "default": "View All Deals"
    }
  ],
  "presets": [
    {
      "name": "Deals of the Day",
      "category": "Products"
    }
  ]
}
{% endschema %}