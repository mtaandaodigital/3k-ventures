<div class="w-full px-3 sm:px-4 md:px-6 lg:px-8 py-4 sm:py-6 md:py-8">
  <div class="max-w-6xl mx-auto">
    <!-- Account Header -->
    <div class="text-center mb-8 md:mb-12">
      <h1 class="section-title inline-block relative">My Account</h1>
      <p class="subtitle mt-4 max-w-3xl mx-auto">Welcome back, {{ customer.name }}</p>
    </div>

    <!-- Account Navigation -->
    <div class="mb-8 border-b border-mist-gray/20 dark:border-forest-shadow/20">
      <div class="flex flex-wrap -mb-px">
        <button class="account-tab-button active" data-tab="dashboard">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M3 12l2-2m0 0l7-7 7 7M5 10v10a1 1 0 001 1h3m10-11l2 2m-2-2v10a1 1 0 01-1 1h-3m-6 0a1 1 0 001-1v-4a1 1 0 011-1h2a1 1 0 011 1v4a1 1 0 001 1m-6 0h6"></path>
          </svg>
          Dashboard
        </button>
        <button class="account-tab-button" data-tab="orders">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
          </svg>
          Orders
        </button>
        <button class="account-tab-button" data-tab="addresses">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
          </svg>
          Addresses
        </button>
        <button class="account-tab-button" data-tab="wishlist">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
          </svg>
          Wishlist
        </button>
        <button class="account-tab-button" data-tab="settings">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M10.325 4.317c.426-1.756 2.924-1.756 3.35 0a1.724 1.724 0 002.573 1.066c1.543-.94 3.31.826 2.37 2.37a1.724 1.724 0 001.065 2.572c1.756.426 1.756 2.924 0 3.35a1.724 1.724 0 00-1.066 2.573c.94 1.543-.826 3.31-2.37 2.37a1.724 1.724 0 00-2.572 1.065c-.426 1.756-2.924 1.756-3.35 0a1.724 1.724 0 00-2.573-1.066c-1.543.94-3.31-.826-2.37-2.37a1.724 1.724 0 00-1.065-2.572c-1.756-.426-1.756-2.924 0-3.35a1.724 1.724 0 001.066-2.573c-.94-1.543.826-3.31 2.37-2.37.996.608 2.296.07 2.572-1.065z"></path>
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M15 12a3 3 0 11-6 0 3 3 0 016 0z"></path>
          </svg>
          Settings
        </button>
        <a href="/account/logout" class="account-tab-button text-red-500">
          <svg class="w-5 h-5 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M17 16l4-4m0 0l-4-4m4 4H7m6 4v1a3 3 0 01-3 3H6a3 3 0 01-3-3V7a3 3 0 013-3h4a3 3 0 013 3v1"></path>
          </svg>
          Logout
        </a>
      </div>
    </div>

    <!-- Tab Content -->
    <div class="account-tab-content">
      <!-- Dashboard Tab -->
      <div id="dashboard" class="account-tab-panel active">
        <div class="grid grid-cols-1 md:grid-cols-3 gap-6">
          <!-- Account Overview -->
          <div class="bg-white dark:bg-deep-moss-black/20 rounded-lg shadow-soft p-6">
            <div class="flex items-center mb-4">
              <div class="w-12 h-12 rounded-full bg-olive-verde/20 flex items-center justify-center mr-4">
                <svg class="w-6 h-6 text-olive-verde" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 7a4 4 0 11-8 0 4 4 0 018 0zM12 14a7 7 0 00-7 7h14a7 7 0 00-7-7z"></path>
                </svg>
              </div>
              <div>
                <h2 class="text-xl font-bold text-deep-moss-black dark:text-mist-gray">{{ customer.name }}</h2>
                <p class="text-forest-shadow dark:text-herbal-cream">{{ customer.email }}</p>
              </div>
            </div>
            <div class="border-t border-mist-gray/20 dark:border-forest-shadow/20 pt-4 mt-4">
              <p class="text-forest-shadow dark:text-herbal-cream mb-2">
                <span class="font-medium text-deep-moss-black dark:text-mist-gray">Member since:</span> 
                {{ customer.created_at | date: "%B %d, %Y" }}
              </p>
              <p class="text-forest-shadow dark:text-herbal-cream">
                <span class="font-medium text-deep-moss-black dark:text-mist-gray">Orders placed:</span> 
                {{ customer.orders_count }}
              </p>
            </div>
          </div>
          
          <!-- Recent Orders -->
          <div class="bg-white dark:bg-deep-moss-black/20 rounded-lg shadow-soft p-6">
            <div class="flex items-center justify-between mb-4">
              <h2 class="text-xl font-bold text-deep-moss-black dark:text-mist-gray">Recent Orders</h2>
              <button class="text-sm text-olive-verde hover:underline" data-tab="orders" onclick="switchTab('orders')">View All</button>
            </div>
            {% if customer.orders.size > 0 %}
              <div class="space-y-4">
                {% for order in customer.orders limit:2 %}
                  <div class="border-b border-mist-gray/20 dark:border-forest-shadow/20 pb-4 {% if forloop.last %}border-b-0{% endif %}">
                    <div class="flex justify-between items-center mb-2">
                      <a href="/account/orders/{{ order.name }}" class="font-medium text-deep-moss-black dark:text-mist-gray hover:text-olive-verde transition-colors duration-200">
                        Order #{{ order.name }}
                      </a>
                      <span class="text-sm {% if order.financial_status == 'paid' %}text-green-600{% else %}text-amber-600{% endif %}">
                        {{ order.financial_status | capitalize }}
                      </span>
                    </div>
                    <p class="text-sm text-forest-shadow dark:text-herbal-cream">
                      {{ order.created_at | date: "%B %d, %Y" }} â€¢ {{ order.total_price | money }}
                    </p>
                  </div>
                {% endfor %}
              </div>
            {% else %}
              <div class="text-center py-6">
                <p class="text-forest-shadow dark:text-herbal-cream mb-4">You haven't placed any orders yet.</p>
                <a href="/collections/all" class="btn-secondary inline-flex items-center text-sm">
                  <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
                  </svg>
                  Start Shopping
                </a>
              </div>
            {% endif %}
          </div>
          
          <!-- Wishlist Preview -->
          <div class="bg-white dark:bg-deep-moss-black/20 rounded-lg shadow-soft p-6">
            <div class="flex items-center justify-between mb-4">
              <h2 class="text-xl font-bold text-deep-moss-black dark:text-mist-gray">Wishlist</h2>
              <button class="text-sm text-olive-verde hover:underline" data-tab="wishlist" onclick="switchTab('wishlist')">View All</button>
            </div>
            <div id="wishlist-preview" class="grid grid-cols-2 gap-4">
              <div class="animate-pulse flex flex-col items-center justify-center">
                <div class="w-full h-24 bg-mist-gray/20 dark:bg-forest-shadow/20 rounded-lg mb-2"></div>
                <div class="h-4 bg-mist-gray/20 dark:bg-forest-shadow/20 rounded w-3/4 mb-1"></div>
                <div class="h-3 bg-mist-gray/20 dark:bg-forest-shadow/20 rounded w-1/2"></div>
              </div>
              <div class="animate-pulse flex flex-col items-center justify-center">
                <div class="w-full h-24 bg-mist-gray/20 dark:bg-forest-shadow/20 rounded-lg mb-2"></div>
                <div class="h-4 bg-mist-gray/20 dark:bg-forest-shadow/20 rounded w-3/4 mb-1"></div>
                <div class="h-3 bg-mist-gray/20 dark:bg-forest-shadow/20 rounded w-1/2"></div>
              </div>
            </div>
          </div>
        </div>
        
        <!-- Newsletter & Recommendations -->
        <div class="grid grid-cols-1 md:grid-cols-2 gap-6 mt-6">
          <!-- Newsletter -->
          <div class="bg-white dark:bg-deep-moss-black/20 rounded-lg shadow-soft p-6">
            <h2 class="text-xl font-bold text-deep-moss-black dark:text-mist-gray mb-4">Newsletter Subscription</h2>
            <p class="text-forest-shadow dark:text-herbal-cream mb-4">
              Stay updated with our latest products, promotions, and news.
            </p>
            <div class="flex items-center">
              <div class="form-control mr-4">
                <input type="checkbox" id="newsletter-subscription" class="h-5 w-5 rounded border-mist-gray/20 dark:border-forest-shadow/20 text-olive-verde focus:ring-olive-verde" checked>
              </div>
              <label for="newsletter-subscription" class="text-deep-moss-black dark:text-mist-gray">
                I want to receive newsletters
              </label>
            </div>
            <button class="btn-secondary w-full mt-4">Update Preferences</button>
          </div>
          
          <!-- Recommendations -->
          <div class="bg-white dark:bg-deep-moss-black/20 rounded-lg shadow-soft p-6">
            <h2 class="text-xl font-bold text-deep-moss-black dark:text-mist-gray mb-4">Recommended For You</h2>
            <div class="grid grid-cols-2 gap-4">
              {% for product in collections.all.products limit:2 %}
                <a href="{{ product.url }}" class="group">
                  <div class="aspect-square rounded-lg overflow-hidden bg-mist-gray/20 dark:bg-forest-shadow/20 mb-2">
                    {% if product.featured_image %}
                      <img src="{{ product.featured_image | img_url: 'medium' }}" alt="{{ product.title }}" class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105">
                    {% else %}
                      <div class="w-full h-full flex items-center justify-center">
                        <svg class="w-10 h-10 text-forest-shadow/50 dark:text-mist-gray/50" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                        </svg>
                      </div>
                    {% endif %}
                  </div>
                  <h3 class="text-sm font-medium text-deep-moss-black dark:text-mist-gray truncate">{{ product.title }}</h3>
                  <p class="text-sm text-forest-shadow dark:text-herbal-cream">{{ product.price | money }}</p>
                </a>
              {% endfor %}
            </div>
          </div>
        </div>
      </div>
      
      <!-- Orders Tab -->
      <div id="orders" class="account-tab-panel">
        <div class="bg-white dark:bg-deep-moss-black/20 rounded-lg shadow-soft p-6">
          <h2 class="text-xl font-bold text-deep-moss-black dark:text-mist-gray mb-6">Order History</h2>
          
          {% if customer.orders.size > 0 %}
            <div class="overflow-x-auto">
              <table class="min-w-full divide-y divide-mist-gray/20 dark:divide-forest-shadow/20">
                <thead>
                  <tr>
                    <th class="px-4 py-3 text-left text-xs font-medium text-forest-shadow dark:text-herbal-cream uppercase tracking-wider">Order</th>
                    <th class="px-4 py-3 text-left text-xs font-medium text-forest-shadow dark:text-herbal-cream uppercase tracking-wider">Date</th>
                    <th class="px-4 py-3 text-left text-xs font-medium text-forest-shadow dark:text-herbal-cream uppercase tracking-wider">Status</th>
                    <th class="px-4 py-3 text-left text-xs font-medium text-forest-shadow dark:text-herbal-cream uppercase tracking-wider">Total</th>
                    <th class="px-4 py-3 text-right text-xs font-medium text-forest-shadow dark:text-herbal-cream uppercase tracking-wider">Actions</th>
                  </tr>
                </thead>
                <tbody class="divide-y divide-mist-gray/20 dark:divide-forest-shadow/20">
                  {% for order in customer.orders %}
                    <tr>
                      <td class="px-4 py-4 whitespace-nowrap text-sm font-medium text-deep-moss-black dark:text-mist-gray">
                        #{{ order.name }}
                      </td>
                      <td class="px-4 py-4 whitespace-nowrap text-sm text-forest-shadow dark:text-herbal-cream">
                        {{ order.created_at | date: "%B %d, %Y" }}
                      </td>
                      <td class="px-4 py-4 whitespace-nowrap text-sm">
                        <span class="px-2 inline-flex text-xs leading-5 font-semibold rounded-full 
                          {% if order.financial_status == 'paid' %}
                            bg-green-100 text-green-800
                          {% elsif order.financial_status == 'pending' %}
                            bg-yellow-100 text-yellow-800
                          {% else %}
                            bg-red-100 text-red-800
                          {% endif %}">
                          {{ order.financial_status | capitalize }}
                        </span>
                      </td>
                      <td class="px-4 py-4 whitespace-nowrap text-sm text-forest-shadow dark:text-herbal-cream">
                        {{ order.total_price | money }}
                      </td>
                      <td class="px-4 py-4 whitespace-nowrap text-right text-sm font-medium">
                        <a href="/account/orders/{{ order.name }}" class="text-olive-verde hover:text-olive-verde/80">View</a>
                      </td>
                    </tr>
                  {% endfor %}
                </tbody>
              </table>
            </div>
          {% else %}
            <div class="text-center py-12">
              <div class="inline-flex items-center justify-center w-16 h-16 bg-mist-gray/20 dark:bg-forest-shadow/20 rounded-full mb-4">
                <svg class="w-8 h-8 text-forest-shadow dark:text-herbal-cream" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M16 11V7a4 4 0 00-8 0v4M5 9h14l1 12H4L5 9z"></path>
                </svg>
              </div>
              <h3 class="text-lg font-bold text-deep-moss-black dark:text-mist-gray mb-2">No orders yet</h3>
              <p class="text-forest-shadow dark:text-herbal-cream mb-6">You haven't placed any orders yet.</p>
              <a href="/collections/all" class="btn-primary inline-flex items-center">
                Start Shopping
              </a>
            </div>
          {% endif %}
        </div>
      </div>
      
      <!-- Addresses Tab -->
      <div id="addresses" class="account-tab-panel">
        <div class="bg-white dark:bg-deep-moss-black/20 rounded-lg shadow-soft p-6">
          <div class="flex items-center justify-between mb-6">
            <h2 class="text-xl font-bold text-deep-moss-black dark:text-mist-gray">Your Addresses</h2>
            <button class="btn-secondary" onclick="toggleAddressForm()">
              <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
              </svg>
              Add New Address
            </button>
          </div>
          
          <!-- New Address Form (Hidden by default) -->
          <div id="new-address-form" class="hidden mb-8 p-4 border border-mist-gray/20 dark:border-forest-shadow/20 rounded-lg">
            <h3 class="text-lg font-bold text-deep-moss-black dark:text-mist-gray mb-4">Add New Address</h3>
            <form action="/account/addresses" method="post">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                <div>
                  <label for="address_first_name" class="block text-sm font-medium text-forest-shadow dark:text-herbal-cream mb-1">First Name</label>
                  <input type="text" id="address_first_name" name="address[first_name]" class="w-full" required>
                </div>
                <div>
                  <label for="address_last_name" class="block text-sm font-medium text-forest-shadow dark:text-herbal-cream mb-1">Last Name</label>
                  <input type="text" id="address_last_name" name="address[last_name]" class="w-full" required>
                </div>
                <div>
                  <label for="address_company" class="block text-sm font-medium text-forest-shadow dark:text-herbal-cream mb-1">Company (Optional)</label>
                  <input type="text" id="address_company" name="address[company]" class="w-full">
                </div>
                <div>
                  <label for="address_phone" class="block text-sm font-medium text-forest-shadow dark:text-herbal-cream mb-1">Phone</label>
                  <input type="tel" id="address_phone" name="address[phone]" class="w-full">
                </div>
                <div class="md:col-span-2">
                  <label for="address_address1" class="block text-sm font-medium text-forest-shadow dark:text-herbal-cream mb-1">Address</label>
                  <input type="text" id="address_address1" name="address[address1]" class="w-full" required>
                </div>
                <div class="md:col-span-2">
                  <label for="address_address2" class="block text-sm font-medium text-forest-shadow dark:text-herbal-cream mb-1">Apartment, suite, etc. (Optional)</label>
                  <input type="text" id="address_address2" name="address[address2]" class="w-full">
                </div>
                <div>
                  <label for="address_city" class="block text-sm font-medium text-forest-shadow dark:text-herbal-cream mb-1">City</label>
                  <input type="text" id="address_city" name="address[city]" class="w-full" required>
                </div>
                <div>
                  <label for="address_country" class="block text-sm font-medium text-forest-shadow dark:text-herbal-cream mb-1">Country</label>
                  <select id="address_country" name="address[country]" class="w-full" required>
                    <option value="United States">United States</option>
                    <option value="Canada">Canada</option>
                    <option value="United Kingdom">United Kingdom</option>
                    <!-- Add more countries as needed -->
                  </select>
                </div>
                <div>
                  <label for="address_province" class="block text-sm font-medium text-forest-shadow dark:text-herbal-cream mb-1">State/Province</label>
                  <input type="text" id="address_province" name="address[province]" class="w-full" required>
                </div>
                <div>
                  <label for="address_zip" class="block text-sm font-medium text-forest-shadow dark:text-herbal-cream mb-1">Postal/Zip Code</label>
                  <input type="text" id="address_zip" name="address[zip]" class="w-full" required>
                </div>
              </div>
              <div class="flex items-center mb-4">
                <input type="checkbox" id="address_default" name="address[default]" value="1" class="h-4 w-4 rounded border-mist-gray/20 dark:border-forest-shadow/20 text-olive-verde focus:ring-olive-verde">
                <label for="address_default" class="ml-2 block text-sm text-forest-shadow dark:text-herbal-cream">
                  Set as default address
                </label>
              </div>
              <div class="flex justify-end space-x-3">
                <button type="button" class="btn-text" onclick="toggleAddressForm()">Cancel</button>
                <button type="submit" class="btn-primary">Save Address</button>
              </div>
            </form>
          </div>
          
          <!-- Addresses List -->
          <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
            {% for address in customer.addresses %}
              <div class="border border-mist-gray/20 dark:border-forest-shadow/20 rounded-lg p-4 relative">
                {% if address == customer.default_address %}
                  <span class="absolute top-4 right-4 px-2 py-1 bg-olive-verde text-white text-xs font-bold rounded">Default</span>
                {% endif %}
                
                <div class="mb-4">
                  <h3 class="text-lg font-bold text-deep-moss-black dark:text-mist-gray">
                    {{ address.first_name }} {{ address.last_name }}
                  </h3>
                  {% if address.company != blank %}
                    <p class="text-forest-shadow dark:text-herbal-cream">{{ address.company }}</p>
                  {% endif %}
                </div>
                
                <div class="text-forest-shadow dark:text-herbal-cream mb-4">
                  <p>{{ address.address1 }}</p>
                  {% if address.address2 != blank %}
                    <p>{{ address.address2 }}</p>
                  {% endif %}
                  <p>{{ address.city }}, {{ address.province_code }} {{ address.zip }}</p>
                  <p>{{ address.country }}</p>
                  {% if address.phone != blank %}
                    <p>{{ address.phone }}</p>
                  {% endif %}
                </div>
                
                <div class="flex space-x-3">
                  <button class="btn-text text-sm" onclick="editAddress('{{ address.id }}')">Edit</button>
                  {% if address != customer.default_address %}
                    <form method="post" action="/account/addresses/{{ address.id }}">
                      <input type="hidden" name="_method" value="delete">
                      <button type="submit" class="btn-text text-sm text-red-500">Delete</button>
                    </form>
                    <form method="post" action="/account/addresses/{{ address.id }}">
                      <input type="hidden" name="address[default]" value="1">
                      <button type="submit" class="btn-text text-sm text-olive-verde">Set as Default</button>
                    </form>
                  {% endif %}
                </div>
              </div>
            {% else %}
              <div class="md:col-span-2 text-center py-12">
                <div class="inline-flex items-center justify-center w-16 h-16 bg-mist-gray/20 dark:bg-forest-shadow/20 rounded-full mb-4">
                  <svg class="w-8 h-8 text-forest-shadow dark:text-herbal-cream" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M17.657 16.657L13.414 20.9a1.998 1.998 0 01-2.827 0l-4.244-4.243a8 8 0 1111.314 0z"></path>
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M15 11a3 3 0 11-6 0 3 3 0 016 0z"></path>
                  </svg>
                </div>
                <h3 class="text-lg font-bold text-deep-moss-black dark:text-mist-gray mb-2">No addresses yet</h3>
                <p class="text-forest-shadow dark:text-herbal-cream mb-6">You haven't added any addresses yet.</p>
                <button class="btn-primary inline-flex items-center" onclick="toggleAddressForm()">
                  <svg class="w-4 h-4 mr-2" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                    <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M12 6v6m0 0v6m0-6h6m-6 0H6"></path>
                  </svg>
                  Add New Address
                </button>
              </div>
            {% endfor %}
          </div>
        </div>
      </div>
      
      <!-- Wishlist Tab -->
      <div id="wishlist" class="account-tab-panel">
        <div class="bg-white dark:bg-deep-moss-black/20 rounded-lg shadow-soft p-6">
          <h2 class="text-xl font-bold text-deep-moss-black dark:text-mist-gray mb-6">My Wishlist</h2>
          
          <div id="wishlist-items" class="grid grid-cols-2 md:grid-cols-4 gap-6">
            <!-- Wishlist items will be loaded here via JavaScript -->
            <div class="animate-pulse flex flex-col">
              <div class="w-full aspect-square bg-mist-gray/20 dark:bg-forest-shadow/20 rounded-lg mb-3"></div>
              <div class="h-4 bg-mist-gray/20 dark:bg-forest-shadow/20 rounded w-3/4 mb-2"></div>
              <div class="h-3 bg-mist-gray/20 dark:bg-forest-shadow/20 rounded w-1/2"></div>
            </div>
            <div class="animate-pulse flex flex-col">
              <div class="w-full aspect-square bg-mist-gray/20 dark:bg-forest-shadow/20 rounded-lg mb-3"></div>
              <div class="h-4 bg-mist-gray/20 dark:bg-forest-shadow/20 rounded w-3/4 mb-2"></div>
              <div class="h-3 bg-mist-gray/20 dark:bg-forest-shadow/20 rounded w-1/2"></div>
            </div>
            <div class="animate-pulse flex flex-col">
              <div class="w-full aspect-square bg-mist-gray/20 dark:bg-forest-shadow/20 rounded-lg mb-3"></div>
              <div class="h-4 bg-mist-gray/20 dark:bg-forest-shadow/20 rounded w-3/4 mb-2"></div>
              <div class="h-3 bg-mist-gray/20 dark:bg-forest-shadow/20 rounded w-1/2"></div>
            </div>
            <div class="animate-pulse flex flex-col">
              <div class="w-full aspect-square bg-mist-gray/20 dark:bg-forest-shadow/20 rounded-lg mb-3"></div>
              <div class="h-4 bg-mist-gray/20 dark:bg-forest-shadow/20 rounded w-3/4 mb-2"></div>
              <div class="h-3 bg-mist-gray/20 dark:bg-forest-shadow/20 rounded w-1/2"></div>
            </div>
          </div>
        </div>
      </div>
      
      <!-- Settings Tab -->
      <div id="settings" class="account-tab-panel">
        <div class="bg-white dark:bg-deep-moss-black/20 rounded-lg shadow-soft p-6">
          <h2 class="text-xl font-bold text-deep-moss-black dark:text-mist-gray mb-6">Account Settings</h2>
          
          <!-- Account Information -->
          <div class="mb-8">
            <h3 class="text-lg font-medium text-deep-moss-black dark:text-mist-gray mb-4">Account Information</h3>
            <form action="/account" method="post">
              <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mb-4">
                <div>
                  <label for="customer_first_name" class="block text-sm font-medium text-forest-shadow dark:text-herbal-cream mb-1">First Name</label>
                  <input type="text" id="customer_first_name" name="customer[first_name]" value="{{ customer.first_name }}" class="w-full" required>
                </div>
                <div>
                  <label for="customer_last_name" class="block text-sm font-medium text-forest-shadow dark:text-herbal-cream mb-1">Last Name</label>
                  <input type="text" id="customer_last_name" name="customer[last_name]" value="{{ customer.last_name }}" class="w-full" required>
                </div>
                <div class="md:col-span-2">
                  <label for="customer_email" class="block text-sm font-medium text-forest-shadow dark:text-herbal-cream mb-1">Email</label>
                  <input type="email" id="customer_email" name="customer[email]" value="{{ customer.email }}" class="w-full" required>
                </div>
              </div>
              <div class="flex justify-end">
                <button type="submit" class="btn-primary">Update Information</button>
              </div>
            </form>
          </div>
          
          <!-- Change Password -->
          <div class="border-t border-mist-gray/20 dark:border-forest-shadow/20 pt-8">
            <h3 class="text-lg font-medium text-deep-moss-black dark:text-mist-gray mb-4">Change Password</h3>
            <form action="/account" method="post">
              <div class="grid grid-cols-1 gap-4 mb-4">
                <div>
                  <label for="customer_password_current" class="block text-sm font-medium text-forest-shadow dark:text-herbal-cream mb-1">Current Password</label>
                  <input type="password" id="customer_password_current" name="customer[password_current]" class="w-full" required>
                </div>
                <div>
                  <label for="customer_password" class="block text-sm font-medium text-forest-shadow dark:text-herbal-cream mb-1">New Password</label>
                  <input type="password" id="customer_password" name="customer[password]" class="w-full" required>
                </div>
                <div>
                  <label for="customer_password_confirmation" class="block text-sm font-medium text-forest-shadow dark:text-herbal-cream mb-1">Confirm New Password</label>
                  <input type="password" id="customer_password_confirmation" name="customer[password_confirmation]" class="w-full" required>
                </div>
              </div>
              <div class="flex justify-end">
                <button type="submit" class="btn-primary">Change Password</button>
              </div>
            </form>
          </div>
          
          <!-- Communication Preferences -->
          <div class="border-t border-mist-gray/20 dark:border-forest-shadow/20 pt-8 mt-8">
            <h3 class="text-lg font-medium text-deep-moss-black dark:text-mist-gray mb-4">Communication Preferences</h3>
            <form action="/account" method="post">
              <div class="space-y-4 mb-6">
                <div class="flex items-start">
                  <div class="flex items-center h-5">
                    <input id="marketing_emails" name="customer[accepts_marketing]" type="checkbox" class="h-4 w-4 rounded border-mist-gray/20 dark:border-forest-shadow/20 text-olive-verde focus:ring-olive-verde" checked>
                  </div>
                  <div class="ml-3 text-sm">
                    <label for="marketing_emails" class="font-medium text-deep-moss-black dark:text-mist-gray">Marketing Emails</label>
                    <p class="text-forest-shadow dark:text-herbal-cream">Receive emails about new products, promotions, and more.</p>
                  </div>
                </div>
                <div class="flex items-start">
                  <div class="flex items-center h-5">
                    <input id="order_updates" name="order_updates" type="checkbox" class="h-4 w-4 rounded border-mist-gray/20 dark:border-forest-shadow/20 text-olive-verde focus:ring-olive-verde" checked>
                  </div>
                  <div class="ml-3 text-sm">
                    <label for="order_updates" class="font-medium text-deep-moss-black dark:text-mist-gray">Order Updates</label>
                    <p class="text-forest-shadow dark:text-herbal-cream">Receive emails about your orders and shipping updates.</p>
                  </div>
                </div>
              </div>
              <div class="flex justify-end">
                <button type="submit" class="btn-primary">Save Preferences</button>
              </div>
            </form>
          </div>
        </div>
      </div>
    </div>
  </div>
</div>

<style>
  /* Tab Navigation Styles */
  .account-tab-button {
    @apply inline-flex items-center px-4 py-2 border-b-2 border-transparent font-medium text-sm text-forest-shadow dark:text-herbal-cream hover:text-olive-verde hover:border-olive-verde transition-colors duration-200;
  }
  
  .account-tab-button.active {
    @apply border-olive-verde text-olive-verde font-bold;
  }
  
  /* Tab Content Styles */
  .account-tab-panel {
    @apply hidden;
  }
  
  .account-tab-panel.active {
    @apply block;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    // Tab Navigation
    const tabButtons = document.querySelectorAll('.account-tab-button');
    const tabPanels = document.querySelectorAll('.account-tab-panel');
    
    // Initialize tabs
    function initTabs() {
      // Get tab from URL hash or default to dashboard
      const currentTab = window.location.hash.substring(1) || 'dashboard';
      switchTab(currentTab);
      
      // Add click event listeners to tab buttons
      tabButtons.forEach(button => {
        button.addEventListener('click', function() {
          const tabId = this.getAttribute('data-tab');
          switchTab(tabId);
        });
      });
    }
    
    // Switch tab function (also exposed globally)
    window.switchTab = function(tabId) {
      // Update URL hash
      window.location.hash = tabId;
      
      // Update active states
      tabButtons.forEach(button => {
        if (button.getAttribute('data-tab') === tabId) {
          button.classList.add('active');
        } else {
          button.classList.remove('active');
        }
      });
      
      tabPanels.forEach(panel => {
        if (panel.id === tabId) {
          panel.classList.add('active');
        } else {
          panel.classList.remove('active');
        }
      });
    };
    
    // Address form toggle
    window.toggleAddressForm = function() {
      const addressForm = document.getElementById('new-address-form');
      if (addressForm) {
        addressForm.classList.toggle('hidden');
      }
    };
    
    // Edit address function
    window.editAddress = function(addressId) {
      console.log('Edit address:', addressId);
      // Implement address editing functionality
      // This would typically open a modal or form with the address details
    };
    
    // Helper function to get cookie
    function getCookie(name) {
      let nameEQ = name + "=";
      let ca = document.cookie.split(';');
      for (let i = 0; i < ca.length; i++) {
        let c = ca[i];
        while (c.charAt(0) == ' ') c = c.substring(1, c.length);
        if (c.indexOf(nameEQ) == 0) return c.substring(nameEQ.length, c.length);
      }
      return null;
    }
    
    // Load wishlist items
    function loadWishlistItems() {
      let wishlist = [];
      
      try {
        // Get wishlist from localStorage
        wishlist = JSON.parse(localStorage.getItem('wishlist') || '[]');
        
        const wishlistItemsContainer = document.getElementById('wishlist-items');
        const wishlistPreviewContainer = document.getElementById('wishlist-preview');
        
        if (!wishlistItemsContainer) return;
        
        // Clear loading placeholders
        wishlistItemsContainer.innerHTML = '';
        if (wishlistPreviewContainer) {
          wishlistPreviewContainer.innerHTML = '';
        }
        
        if (wishlist.length === 0) {
          // Empty wishlist state
          wishlistItemsContainer.innerHTML = `
            <div class="md:col-span-4 text-center py-12">
              <div class="inline-flex items-center justify-center w-16 h-16 bg-mist-gray/20 dark:bg-forest-shadow/20 rounded-full mb-4">
                <svg class="w-8 h-8 text-forest-shadow dark:text-herbal-cream" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                  <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1.5" d="M4.318 6.318a4.5 4.5 0 000 6.364L12 20.364l7.682-7.682a4.5 4.5 0 00-6.364-6.364L12 7.636l-1.318-1.318a4.5 4.5 0 00-6.364 0z"></path>
                </svg>
              </div>
              <h3 class="text-lg font-bold text-deep-moss-black dark:text-mist-gray mb-2">Your wishlist is empty</h3>
              <p class="text-forest-shadow dark:text-herbal-cream mb-6">You haven't added any products to your wishlist yet.</p>
              <a href="/collections/all" class="btn-primary inline-flex items-center">
                Start Shopping
              </a>
            </div>
          `;
          
          if (wishlistPreviewContainer) {
            wishlistPreviewContainer.innerHTML = `
              <div class="col-span-2 text-center py-6">
                <p class="text-forest-shadow dark:text-herbal-cream mb-4">Your wishlist is empty.</p>
                <a href="/collections/all" class="btn-text text-sm">
                  Browse Products
                </a>
              </div>
            `;
          }
          return;
        }
        
        // Limit to first 4 items for preview
        const previewItems = wishlist.slice(0, 2);
        
        // Process all wishlist items
        const fetchPromises = wishlist.map(productHandle => 
          fetch('/products/' + productHandle + '.json')
            .then(response => {
              if (!response.ok) {
                throw new Error('Product not found');
              }
              return response.json();
            })
            .then(data => {
              const product = data.product;
              const variant = product.variants[0];
              const price = variant.price;
              const formattedPrice = new Intl.NumberFormat('en-US', {
                style: 'currency',
                currency: 'USD'
              }).format(price / 100);
              
              return {
                handle: product.handle,
                title: product.title,
                price: formattedPrice,
                image: product.featured_image ? product.featured_image.src : '',
                url: '/products/' + product.handle
              };
            })
            .catch(error => {
              console.error('Error fetching product:', error);
              return null;
            })
        );
        
        Promise.all(fetchPromises)
          .then(products => {
            // Filter out any failed requests
            const validProducts = products.filter(p => p !== null);
            
            if (validProducts.length === 0) {
              wishlistItemsContainer.innerHTML = '<p class="text-center py-4">Unable to load wishlist items.</p>';
              return;
            }
            
            // Render wishlist items
            validProducts.forEach(product => {
              const productCard = `
                <div class="product-card relative group">
                  <a href="${product.url}" class="block" aria-label="View ${product.title}">
                    <div class="relative overflow-hidden rounded-lg bg-mist-gray/20 dark:bg-forest-shadow/20 aspect-square">
                      ${product.image ? 
                        `<img src="${product.image}" alt="${product.title}" class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105">` : 
                        `<div class="w-full h-full flex items-center justify-center">
                          <svg class="w-16 h-16 text-forest-shadow/50 dark:text-mist-gray/50" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                          </svg>
                        </div>`
                      }
                      
                      <button class="absolute top-2 right-2 bg-white dark:bg-deep-moss-black text-deep-moss-black dark:text-white p-2 rounded-full shadow-md hover:bg-red-500 hover:text-white transition-colors duration-200" 
                              onclick="event.preventDefault(); removeFromWishlist('${product.handle}');" 
                              aria-label="Remove from wishlist">
                        <svg class="w-4 h-4" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                          <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M6 18L18 6M6 6l12 12"></path>
                        </svg>
                      </button>
                    </div>
                    
                    <div class="mt-4">
                      <h3 class="product-title text-deep-moss-black dark:text-mist-gray font-medium text-sm md:text-base truncate">
                        ${product.title}
                      </h3>
                      <p class="text-deep-moss-black dark:text-mist-gray font-bold text-sm md:text-base mt-1">
                        ${product.price}
                      </p>
                    </div>
                  </a>
                  
                  <button class="btn-primary w-full mt-3 py-2 text-sm" onclick="addToCart('${product.handle}')">
                    Add to Cart
                  </button>
                </div>
              `;
              
              wishlistItemsContainer.innerHTML += productCard;
            });
            
            // Render preview items if container exists
            if (wishlistPreviewContainer) {
              wishlistPreviewContainer.innerHTML = '';
              
              validProducts.slice(0, 2).forEach(product => {
                const previewCard = `
                  <a href="${product.url}" class="block group">
                    <div class="aspect-square rounded-lg overflow-hidden bg-mist-gray/20 dark:bg-forest-shadow/20 mb-2">
                      ${product.image ? 
                        `<img src="${product.image}" alt="${product.title}" class="w-full h-full object-cover transition-transform duration-500 group-hover:scale-105">` : 
                        `<div class="w-full h-full flex items-center justify-center">
                          <svg class="w-10 h-10 text-forest-shadow/50 dark:text-mist-gray/50" fill="none" stroke="currentColor" viewBox="0 0 24 24" xmlns="http://www.w3.org/2000/svg">
                            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="1" d="M4 16l4.586-4.586a2 2 0 012.828 0L16 16m-2-2l1.586-1.586a2 2 0 012.828 0L20 14m-6-6h.01M6 20h12a2 2 0 002-2V6a2 2 0 00-2-2H6a2 2 0 00-2 2v12a2 2 0 002 2z"></path>
                          </svg>
                        </div>`
                      }
                    </div>
                    <h3 class="text-sm font-medium text-deep-moss-black dark:text-mist-gray truncate">${product.title}</h3>
                    <p class="text-sm text-forest-shadow dark:text-herbal-cream">${product.price}</p>
                  </a>
                `;
                
                wishlistPreviewContainer.innerHTML += previewCard;
              });
            }
          });
      } catch (error) {
        console.error('Error loading wishlist:', error);
      }
    }
    
    // Remove from wishlist function
    window.removeFromWishlist = function(productHandle) {
      try {
        let wishlist = JSON.parse(localStorage.getItem('wishlist') || '[]');
        
        // Remove the product
        wishlist = wishlist.filter(handle => handle !== productHandle);
        
        // Save updated wishlist
        localStorage.setItem('wishlist', JSON.stringify(wishlist));
        
        // Reload wishlist items
        loadWishlistItems();
      } catch (error) {
        console.error('Error removing from wishlist:', error);
      }
    };
    
    // Add to cart function
    window.addToCart = function(productHandle) {
      fetch('/products/' + productHandle + '.json')
        .then(response => response.json())
        .then(data => {
          const variantId = data.product.variants[0].id;
          
          return fetch('/cart/add.js', {
            method: 'POST',
            headers: {
              'Content-Type': 'application/json'
            },
            body: JSON.stringify({
              id: variantId,
              quantity: 1
            })
          });
        })
        .then(response => response.json())
        .then(data => {
          // Show success message or update cart count
          alert('Product added to cart!');
        })
        .catch(error => {
          console.error('Error adding to cart:', error);
        });
    };
    
    // Initialize
    initTabs();
    loadWishlistItems();
  });
</script>
